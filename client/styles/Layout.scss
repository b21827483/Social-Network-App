$theme-map: null;

$themes: (
    light: (
            bg: white,
            bg-secondary: #F06292 ,
            text: #3F729B ,
            ui: #f1ecec,
            border: black,
            home: #f5f4f4
    ),
    dark: (
            bg: #312f2f,
            bg-secondary: #363434,
            text: white,
            ui: grey,
            border: white,
            home: #505050,
        ),
);

@mixin change-theme($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key)
}

@mixin respond($breakpoint) {
  @if ($breakpoint == small){
    @media (max-width: 500px) {
      @content
    }
  }

  @if ($breakpoint == not-max) {
    @media (max-width: 1160px) {
      @content
    }
  }
}

@include change-theme($themes) {
  .page {
    display: flex;
    justify-content: center;
    width: 100vw;
    height: 100%;
    margin-top: 5rem;
    background: t('home');

    .LEFTBAR {
      display: flex;
      justify-content: center;
      width: 20%;

      @include respond(small) {
        display: none;
      }

      @include respond(not-max) {
        width: 25%;
      }
    }

    .HOME {
      display: flex;
      justify-content: center;
      width: 60%;

      @include respond(small) {
        margin: 0.5rem;
        width: 100%;
      }

      @include respond(not-max) {
        width: 75%;
      }
    }

    .RIGHTBAR {
      display: flex;
      justify-content: center;
      width:20%;

      @include respond(small) {
        display: none;
      }

      @include respond(not-max) {
        display: none;
      }
    }
  }
}